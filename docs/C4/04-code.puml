@startuml Diagrama de Classe

' cores amarelo #fbfdb8 , vermelho #ffa19c, verde #a3fcb9, azul #a7d7d7
package "Core" {
    package "Domain" <<Frame>> #fbfdb8 {
        package "Validation" <<Frame>> {
            class DomainValidation {
                + {static} notNull(string value, string exceptionMessage = null): void
                + {static} strMaxLength(string $value, int $maxLength = 255, string $message = null): void
                + {static} strMinLength(string $value, int $minLength = 10, string $message = null): void
            }
        }

        package "Exceptions" <<Frame>> {
            exception EntityValidationException {

            }
        }

        package "ValueObject" <<Frame>>{
            class Uuid {
                + {static} random(): self
                + {static} __toString(): string
                - {static} ensureIsValid(string id): void
            }
        }

        package "Repository" {
            interface CategoryRepositoryInterface {
                + insert(Category $category): Category
                + findAll(string $filter = '', $order = 'DESC'): array
                + findById(string $id): array
                + paginate(string $filter = '', $order = 'DESC', int $page = 1, int $totalPage = 15): array
                + update(Category $category): Category
                + delete(string $id): bool
                + toCategory(object $data): Category
            }
        }
        
        package "Entity" <<Frame>>{
            ' - private #protected +public ~package private

            package "Traits" <<Frame>>{
                abstract class MagicMethodsTrait {
                    __get(): mixed
                    id(): string
                }
            }

            Entity Category {
                - Uuid|string id
                - string name
                - string description
                - boolean isActive
                - DateTime createdAt
                - DateTime updatedAt
                ---
                + activate(): void
                + disable(): void
                + update(string name, string description): void
                + validate(): void
            }
        }
    }

    package "UseCase" <<Frame>> #ffa19c {
        package "Categories" <<Frame>> {
            class CreateCategoryUseCase {
                 
            }
        }
    }

}

' Entity Category
Category ..* "uses" MagicMethodsTrait
Category ..> "uses" DomainValidation
Category ..* "uses" Uuid
CategoryRepositoryInterface --* "uses" Category
Category ..> "throws" EntityValidationException

' UseCase CreateCategoryUseCase
CreateCategoryUseCase ..> "uses" Category
@enduml